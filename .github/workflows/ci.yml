name: ci

on:
  pull_request:
    branches: [main]

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.13

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run code formatting checks
        run: |
          black --check .
          isort --check-only .

      - name: Run linter
        run: |
          flake8

      - name: Create .env file
        run: |
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env

      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q --junitxml=report.xml

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: report.xml

      - name: Build Docker image
        run: |
          docker build --platform linux/amd64 -t flask-linksharingapp:latest .

      - name: Run container and test endpoint
        run: |
          docker run -d --name test-container -p 8000:8000 flask-linksharingapp:latest
          sleep 5
          curl --fail http://localhost:8000 || (docker logs test-container && exit 1)

      - name: Cleanup Docker container
        if: always()
        run: |
          docker stop test-container || true
          docker rm test-container || true
